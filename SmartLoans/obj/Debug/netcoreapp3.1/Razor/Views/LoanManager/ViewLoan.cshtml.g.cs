#pragma checksum "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4a9c59a6c9951c9426324e4724fd8e310a70fccc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_LoanManager_ViewLoan), @"mvc.1.0.view", @"/Views/LoanManager/ViewLoan.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\DEV\SmartLoans\SmartLoans\Views\_ViewImports.cshtml"
using SmartLoan;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\DEV\SmartLoans\SmartLoans\Views\_ViewImports.cshtml"
using SmartLoan.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
using SmartHelper;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4a9c59a6c9951c9426324e4724fd8e310a70fccc", @"/Views/LoanManager/ViewLoan.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a83c5e5401d63e9f19604f61ec10fe4c4974d7dd", @"/Views/_ViewImports.cshtml")]
    public class Views_LoanManager_ViewLoan : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<SmartDomain.Loan>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Client", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("target", new global::Microsoft.AspNetCore.Html.HtmlString("_blank"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "ViewClient", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Loan", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Delete", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/LoanManager/ViewLoan"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/css/anchor.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<section class=\"content-header\">\r\n    <h1>\r\n        ");
#nullable restore
#line 5 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
   Write(Model.LoanRef);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </h1>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content container-fluid\">\r\n    <!-- Horizontal Form -->\r\n    <div class=\"box box-info\">\r\n        <div class=\"box-header with-border\">\r\n            <h3 class=\"box-title\">");
#nullable restore
#line 13 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                             Write(Model.LoanRef);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h3>\r\n        </div>\r\n\r\n        <!-- /.box-header -->\r\n        <!-- form start -->\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a9c59a6c9951c9426324e4724fd8e310a70fccc9031", async() => {
                WriteLiteral("\r\n\r\n");
#nullable restore
#line 20 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
             if (TempData["Error"] != null)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("<div class=\"container\">\r\n                    <div class=\"text-danger\">");
#nullable restore
#line 22 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                        Write(TempData["Error"].ToString());

#line default
#line hidden
#nullable disable
                WriteLiteral("</div>\r\n                </div>\r\n                <br />\r\n");
#nullable restore
#line 25 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("            <div class=\"container\">\r\n                ");
#nullable restore
#line 27 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
           Write(Html.ValidationSummary(false, "", new { @class = "text-danger" }));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n            </div>\r\n\r\n");
#nullable restore
#line 30 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
             if (TempData["Success"] != null)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("<div class=\"container\">\r\n                    <div class=\"text-success\">");
#nullable restore
#line 32 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                         Write(TempData["Success"].ToString());

#line default
#line hidden
#nullable disable
                WriteLiteral("</div>\r\n                </div>\r\n");
#nullable restore
#line 34 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 35 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
             if (TempData["Warning"] != null)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("<div class=\"container\">\r\n                    <div class=\"text-warning\">");
#nullable restore
#line 37 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                         Write(TempData["Warning"].ToString());

#line default
#line hidden
#nullable disable
                WriteLiteral("</div>\r\n                </div>\r\n");
#nullable restore
#line 39 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"            <div class=""box-body"">
                <section>
                    <div class=""form-group"">
                        <label for=""inputEmail3"" class=""col-sm-2 control-label"">Loan Reference</label>
                        <div class=""col-sm-10"">
                            <label for=""inputEmail3"" class=""form-control label-default"">");
#nullable restore
#line 45 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                                                   Write(Model.LoanRef);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</label>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label for=""inputEmail3"" class=""col-sm-2 control-label"">Applicant</label>
                        <div class=""col-sm-10"">
");
#nullable restore
#line 51 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                             if (UserAppData.HasPermission(Permissions.View_Client))
                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a9c59a6c9951c9426324e4724fd8e310a70fccc13305", async() => {
#nullable restore
#line 53 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                                                                                             Write(Model.Client.ClientRef);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
                {
                    throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
                }
                BeginWriteTagHelperAttribute();
#nullable restore
#line 53 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                                                                     WriteLiteral(Model.ClientID);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 54 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                            }
                            else
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 57 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                           Write(Model.Client.ClientRef);

#line default
#line hidden
#nullable disable
#nullable restore
#line 57 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                       
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        </div>
                    </div>

                    <div class=""form-group"">
                        <label for=""inputEmail3"" class=""col-sm-2 control-label"">Date Registered</label>
                        <div class=""col-sm-10"">
                            <label for=""inputEmail3"" class=""form-control label-default"">");
#nullable restore
#line 66 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                                                   Write(UtilityService.ShowDateTime(@Model.RegistrationDate));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</label>
                        </div>
                    </div>

                    <div class=""form-group"">
                        <label for=""inputEmail3"" class=""col-sm-2 control-label"">Is Active</label>
                        <div class=""col-sm-2"">
                            <label class=""checkbox-inline"">
                                ");
#nullable restore
#line 74 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                           Write(Html.CheckBoxFor(model => model.IsActive));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                            </label>

                        </div>
                    </div>
                    <div class=""form-group"">
                        <label for=""inputEmail3"" class=""col-sm-2 control-label"">LastChanged By</label>
                        <div class=""col-sm-10"">
                            <label for=""inputEmail3"" class=""form-control label-default"">");
#nullable restore
#line 82 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                                                   Write(Model.LastChangedBy);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</label>
                        </div>
                    </div>

                    <div class=""form-group"">
                        <label for=""inputEmail3"" class=""col-sm-2 control-label"">Last Updated</label>
                        <div class=""col-sm-10"">
                            <label for=""inputEmail3"" class=""form-control label-default"">");
#nullable restore
#line 89 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                                                   Write(UtilityService.ShowDateTime(@Model.LastChangedDate));

#line default
#line hidden
#nullable disable
                WriteLiteral("</label>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"hidden\" id=\"LoanID\" name=\"KonapoFundID\"");
                BeginWriteAttribute("value", " value=\"", 4175, "\"", 4196, 1);
#nullable restore
#line 93 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
WriteAttributeValue("", 4183, Model.LoanID, 4183, 13, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n                    <input type=\"hidden\" id=\"ClientID\" name=\"ClientID\"");
                BeginWriteAttribute("value", " value=\"", 4272, "\"", 4295, 1);
#nullable restore
#line 94 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
WriteAttributeValue("", 4280, Model.ClientID, 4280, 15, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n                    <input type=\"hidden\" id=\"LoanRef\" name=\"LoanRef\"");
                BeginWriteAttribute("value", " value=\"", 4369, "\"", 4391, 1);
#nullable restore
#line 95 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
WriteAttributeValue("", 4377, Model.LoanRef, 4377, 14, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" />\r\n\r\n                </section>\r\n            </div>\r\n            <!-- /.box-body -->\r\n            <div class=\"box-footer\">\r\n");
#nullable restore
#line 101 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                 if (UserAppData.HasPermission(Permissions.Update_Loan))
                {
                    var name = @Model.IsActive ? "Deactivate" : "Activate";
                    

#line default
#line hidden
#nullable disable
                WriteLiteral("<button type=\"submit\" class=\"btn btn-info\">");
#nullable restore
#line 104 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                          Write(name);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button>\r\n");
#nullable restore
#line 105 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 106 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                 if (UserAppData.HasPermission(Permissions.Delete_Loan))
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a9c59a6c9951c9426324e4724fd8e310a70fccc22294", async() => {
                    WriteLiteral("Delete");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
                {
                    throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
                }
                BeginWriteTagHelperAttribute();
#nullable restore
#line 108 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                                                                                          WriteLiteral(Model.LoanID);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 109 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("            </div>\r\n            <!-- /.box-footer -->\r\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

    </div>
    <div class=""row"">
        <div class=""col-lg-12"">
            <div class=""panel panel-default"">
                <div class=""panel-heading"">
                    Financial Information
                </div>
                <!-- /.panel-heading -->
                <div class=""panel-body"">
                    <!-- Nav tabs -->

                    <ul class=""nav nav-tabs"">

                        <li class=""active"">
                            <a href=""#Finance"" data-toggle=""tab"">Information</a>
                        </li>

                    </ul>
                    <!-- Tab panes -->
                    <div class=""tab-content"">

                        <div class=""tab-pane fade in active "" id=""Finance"">
                            <div class=""panel panel-default"">
                                <div class=""panel-heading"">
                                    Information
                                </div>
                            </div>
                 ");
            WriteLiteral(@"           <!-- /.panel-heading -->
                            <div class=""panel-body"">
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Product</label>
                                    <div class=""col-sm-10"">
                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a9c59a6c9951c9426324e4724fd8e310a70fccc27936", async() => {
                WriteLiteral("\r\n                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a9c59a6c9951c9426324e4724fd8e310a70fccc28241", async() => {
                    WriteLiteral("----");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 146 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.ProductID);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
#nullable restore
#line 146 "C:\DEV\SmartLoans\SmartLoans\Views\LoanManager\ViewLoan.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.ProductList;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Effective Date</label>
                                    <div class=""col-sm-10"">
                                        <input type=""date"" class=""form-control"" id=""StartDate"" name=""StartDate"" onchange=""CalculateMaturityDate()"" required>
                                    </div>
                                </div>
                                <br />
                                <br />

                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Tenor (Months)</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class");
            WriteLiteral(@"=""form-control"" id=""Duration"" name=""Duration"" onchange=""CalculateMaturityDate()"">
                                        <span id=""DurationError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Maturity Date</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""MaturityDate"" name=""MaturityDate"" onchange=""CalculateTotal()"" disabled>

                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail");
            WriteLiteral(@"3"" class=""col-sm-2 control-label"">Application Fee</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""ApplicationFee"" name=""ApplicationFee"" value=""0.00"" onchange=""CalculateTotal()"">
                                        <span id=""ApplicationFeeError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Principal</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""Principal"" name=""Principal"" value=""0.00"" onchange=""CalculateTotal()"">
                                        <span id=""PrincipalError"" class=""text-da");
            WriteLiteral(@"nger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Effective Deposit</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""EffectiveDeposit"" name=""EffectiveDeposit"" onchange=""CalculateTotal()"" disabled>
                                        <span id=""EffectiveDepositError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />

                                <div class=""panel panel-success"">
                                    <div class=""panel-heading"">
                      ");
            WriteLiteral(@"                  Loan Calculations
                                    </div>
                                </div>

                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Collection Fee</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""CollectionFee"" name=""CollectionFee"" value=""0.00"" onchange=""CalculateTotal()"">
                                        <span id=""CollectionFeeError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">");
            WriteLiteral(@"Upfront Fees</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""Upfront"" name=""Upfront"" value=""0.00"" onchange=""CalculateTotal()"">
                                        <span id=""UpfrontError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">UpFront Deposit </label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""MinimumUpfront"" name=""MinimumUpfront"" onchange=""CalculateTotal()"" disabled>
                                        <span id=""MinimumUpfrontError"" class=""text-danger text-bold""></span>
               ");
            WriteLiteral(@"                     </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Fees Required</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""FeesReq"" name=""FeesReq"" onchange=""CalculateTotal()"" disabled>
                                        <span id=""FeesReqError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Interest</label>
                                    <div class=""col-sm-10"">");
            WriteLiteral(@"
                                        <input type=""text"" class=""form-control"" id=""Interest"" name=""Interest"" onchange=""CalculateTotal()"" disabled>
                                        <span id=""InterestError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Fx Fixing</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""FxFixing"" name=""FxFixing"" onchange=""CalculateTotal()"" disabled>
                                        <span id=""FxFixingError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />");
            WriteLiteral(@"
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Maturity Value</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""MaturityValue"" name=""MaturityValue"" onchange=""CalculateTotal()"" disabled>
                                        <span id=""MaturityValueError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label for=""inputEmail3"" class=""col-sm-2 control-label"">Remittance</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" id=""");
            WriteLiteral(@"Installment"" name=""Installment"" onchange=""CalculateTotal()"" disabled>
                                        <span id=""InstallmentError"" class=""text-danger text-bold""></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                            </div>

                            <div class=""box-footer"">
                                <a class=""btn  btn-small btn-success pull-right"" data-toggle=""modal"" data-target=""#AddSubCategory"">Submit for Approval</a>
                            </div>
                        </div>

                        <!-- /.panel-body -->
                    </div>
                    <!-- /.panel -->
                </div>

            </div>
        </div>

</section>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "4a9c59a6c9951c9426324e4724fd8e310a70fccc41913", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script src=""https://cdn.jsdelivr.net/npm/table-to-json@1.0.0/lib/jquery.tabletojson.min.js"" integrity=""sha256-H8xrCe0tZFi/C2CgxkmiGksqVaxhW0PFcUKZJZo1yNU="" crossorigin=""anonymous""></script>

<script>
    // When the user clicks on <div>, open the popup
    function myPopUpFunction() {
        var popup = document.getElementById(""myPopup"");
        popup.classList.toggle(""show"");
    }
    $(document).ready(function () {
        var currentdate = new Date();
        var currentMonth = currentdate.getMonth();
        var currentYear = currentdate.getFullYear();
        var newDate = new Date(currentYear, currentMonth, 1);
       var nextMonth = new Date(newDate.setMonth(newDate.getMonth() + 1))
         $('#StartDate').val(nextMonth.toISOString().substring(0, 10));
        CalculateTableTotal();
        CalculateTotal();
        CalculateCI();

    });
    function CalculateMaturityDate() {

        var months = $('#Duration').val();
        var startdate = $('#StartDate').val();
    ");
            WriteLiteral(@"    var _startdate = new Date(startdate);
        var currentMonth = _startdate.getMonth();
        var currentYear = _startdate.getFullYear();
        var newDate = new Date(currentYear, currentMonth, 1);
        var maturitydate = new Date(newDate.setMonth(newDate.getMonth() + parseInt(months)));

        alert(maturitydate);
        $('#MaturityDate').val(maturitydate.toISOString().substring(0, 10));


    }
    $(function () {
        $(""#accordion"").accordion({
            /*It will disable all the active(open) pane i.e .
            collapsible: true,
            active:false,*/
            heightStyle: ""content"",

        });
    });
    $(function () {
        $('#btnPrint').click(function () {
            PrintForm();
        });
    });

    $(function () {
        validateDecimalInput('#ApplicationFee');
        validateDecimalInput('#Principal');
        validateDecimalInput('#EffectiveDeposit');
        validateDecimalInput('#Duration');
        validateDecimalInput");
            WriteLiteral(@"('#InvestmentAmount');
        validateDecimalInput('#InterestRate');
        validateDecimalInput('#Tenure');
        validateDecimalInput('#CollectionFee');
        validateDecimalInput('#Upfront');
        validateDecimalInput('#MinimumUpfront');
        validateDecimalInput('#FeesReq');
        validateDecimalInput('#Interest');
        validateDecimalInput('#FxFixing');
        validateDecimalInput('#MaturityValue');
        validateDecimalInput('#Installment');

        validateDecimalInput('#ATargetRMonths');
    })
    $(function () {

        $(""#TATDisplayOnReport"").prop('checked', true);
        $(""#OTIDisplayOnReport"").prop(""checked"", true);
        $(""#RDDisplayOnReport"").prop(""checked"", true);
        $(""#CFDisplayOnReport"").prop(""checked"", true);
        $(""#TAFPDisplayOnReport"").prop(""checked"", true);
        $(""#TTRDisplayOnReport"").prop(""checked"", true);
        $(""#MBDisplayOnReport"").prop(""checked"", true);
        $(""#SavePrintedReport"").prop(""checked"", true);

   ");
            WriteLiteral(@" });
    function CalculateTableTotal() {
        $('#calc').DataTable({
            ""footerCallback"": function (row, data, start, end, display) {
                var api = this.api(), data;
                // Remove the formatting to get integer data for summation
                //var intVal = function (i) {
                //    return typeof i === 'string' ?
                //        i.replace(/[\$,]/g, '') / 100 :
                //        typeof i === 'number' ?
                //            i : 0;
                //}
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };
                // Total Amount over all pages
                totalamount = api
                    .column(1)
                    .data()
                    .reduce(function (a, b) {
                        return int");
            WriteLiteral(@"Val(a) + intVal(b);
                    }, 0);

                // Total Amount  over this page
                pageTotalAmount = api
                    .column(1, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);


                //console.log(""Total Amount"");
                //console.log(totalamount);

                // Update footer
                $(api.column(1).footer()).html(
                    '$' + pageTotalAmount + ' ($' + totalamount + ' total)'
                );
                populatePercentages();

                // Total  Percentage
                totalPercentage = api
                    .column(2)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                // Total Amount  over this page

                pageTotalPercenta");
            WriteLiteral(@"ge = api
                    .column(2, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                //console.log(""Total Page Percentage"");
                //console.log(pageTotalPercentage);
                //console.log(""Total Percentage"");
                //console.log(totalPercentage);
                // Update footer
                $(api.column(2).footer()).html(
                    pageTotalPercentage + '%' + ' (' + totalPercentage + '% total)'
                );

            }
        });
    }

    function CalculateTotal() {

        var retirement = $('#Retirement').val();
        var period = $('#Period').val();
        var fund = $('#Fund').val();
        fund = fund.replace("","", ""."")
        var incomeAv = $('#IncomeAverage').val();
        var comm = $('#Committment').val();

        //Calculate Annual
        var emergencyfund = fund *");
            WriteLiteral(@" period;
        emergencyfund = emergencyfund.toFixed(2);
        $('#EmergencyTotal').val(emergencyfund);

        //Annual Fund
        var annualfund = fund * 12;
        annualfund = annualfund.toFixed(2);
        $('#AnnualTotal').val(annualfund);
        //Calculate Retirement
        var retirementTotal = annualfund * retirement;
        retirementTotal = retirementTotal.toFixed(2);
        $('#LifeTimeTotal').val(retirementTotal);

        //Calculate
        var commitAmount = $.isNumeric(comm) ? comm : 0;
        var targetMonths = commitAmount > 0 ? emergencyfund / commitAmount : 0;
        targetMonths = targetMonths.toFixed(2);
        var targetYears = targetMonths / 12;
        targetYears = targetYears.toFixed(2);
        $('#FundTargetMonths').val(targetMonths);
        $('#FundTargetYears').val(targetYears);




        // Compound : One Time
        var investmentAmountOT = $('#InvestmentAmountOT').val();
        var interestRateOT = $('#InterestRateOT').val();
");
            WriteLiteral(@"        var tenureOT = $('#TenureOT').val();
        var title = tenureOT > 0 ? ""Value After "" + tenureOT + "" Years"" : ""Value After Years"";
        $('#ValueAfterTenureOTLabel').text(title);
        //=investmentAmountOT * (1 + interestRateOT) ^ tenureOT
        var investAmountP1 = 1 + (interestRateOT / 100);
        var tothePowerOfResult = Math.pow(investAmountP1, tenureOT)
        var valueAfterXyears = investmentAmountOT * tothePowerOfResult;
        valueAfterXyears = valueAfterXyears.toFixed(2);
        multiplierOT = investmentAmountOT > 0 ? valueAfterXyears / investmentAmountOT : 0;
        multiplierOT = multiplierOT.toFixed(2);
        $('#MultiplierOT').val(multiplierOT);
        $('#ValueAfterTenureOT').val(valueAfterXyears);

        // Target Emergency Fund
        var progress = $('#Progress').val();
        var mCommitment = commitAmount;
        $('#MCommitment').val(mCommitment);

        var balance = (emergencyfund - progress) <= 0 ? 0 : (emergencyfund - progress);
    ");
            WriteLiteral(@"    balance = balance.toFixed(2);
        $('#Balance').val(balance);

        var targetRMonths = mCommitment > 0 ? balance / mCommitment : 0;
        targetRMonths = targetRMonths.toFixed(2);
        $('#TargetRMonths').val(targetRMonths)

        var targetRYears = targetRMonths / 12;
        targetRYears = targetRYears.toFixed(2);
        $('#TargetRYears').val(targetRYears)


        // Target Annual Fund
        var aprogress = $('#AProgress').val();
        var amCommitment = commitAmount;
        $('#AMCommitment').val(amCommitment);


        var abalance = (annualfund - aprogress) <= 0 ? 0 : (annualfund - aprogress);
        abalance = abalance.toFixed(2);
        $('#ABalance').val(abalance);

        var atargetRMonths = amCommitment > 0 ? abalance / amCommitment : 0;
        atargetRMonths = atargetRMonths.toFixed(2);
        $('#ATargetRMonths').val(atargetRMonths)

        var atargetRYears = atargetRMonths / 12;
        atargetRYears = atargetRYears.toFixed(2);
    ");
            WriteLiteral(@"    $('#ATargetRYears').val(atargetRYears)

    }
    function CalculateCI() {
        //Compound :Regular
        var investmentAmount = $('#InvestmentAmount').val();
        var interestRate = $('#InterestRate').val();
        var tenure = $('#Tenure').val();
        var title = tenure > 0 ? ""Value After "" + tenure + "" Years"" : ""Value After Years"";
        $('#PostTenureValueLabel').text(title)
        var contributionsMonth = $('#ContributionsMonth').val();
        var paymentsYear = $('#PaymentsYear').val();

        // =N66 * ((1 + (N63 / N65)) ^ (N64 * N65) - 1) / (N63 / N65) + N62 * (1 + N63) ^ N64
        //=MonthlyContributions * ((1 + (InterestRate / NumberOfContributionsPerYear)) ^ (InvestmentYears * NumberOfContributionsPerYear) - 1) / (InterestRate / NumberOfContributionsPerYear) + InitialInvestmentAmount * (1 + InterestRate) ^ InvestmentYears
        var interestRateDivideBy100 = interestRate / 100;//InterestRate
        var monthlyinterest = paymentsYear > 0 ? interestRateDivide");
            WriteLiteral(@"By100 / paymentsYear : 0;//InterestRate / NumberOfContributionsPerYear
        var tenurebypaymentsYear = tenure * paymentsYear;//InvestmentYears * NumberOfContributionsPerYear
        var oneplusInterestRate = 1 + interestRateDivideBy100;// 1 + InterestRate
        var monthlyinterestplus1 = 1 + monthlyinterest;
        var totalInvestment = Math.pow(monthlyinterestplus1, tenurebypaymentsYear);
        console.log(""totalInvestment : "" + totalInvestment);
        var totalInvestmentLess1 = totalInvestment - 1;
        console.log(""totalInvestmentLess1 : "" + totalInvestmentLess1);
        var totalDenominator = contributionsMonth * totalInvestmentLess1;
        console.log(""totalDenominator : "" + totalDenominator);
        var totalResult = monthlyinterest > 0 ? totalDenominator / monthlyinterest : 0;
        console.log(""dividebyMontlyInterestRate : "" + totalResult);


        var tothePowerOfResult = Math.pow(oneplusInterestRate, tenure)
        var compoundRI = investmentAmount * tothePowerOf");
            WriteLiteral(@"Result;
        console.log(""CompoundRI : "" + compoundRI);
        var postTenureValue = totalResult + compoundRI;
        postTenureValue = postTenureValue.toFixed(2);
        console.log(""PostTenureValue : "" + postTenureValue)
        $('#PostTenureValue').val(postTenureValue);

        //Multiplier
        //  =postTenureValue / (investmentAmount + contributionsMonth * paymentsYear * tenure)
        // =N67 / (N62 + N66 * N65 * N64)
        var totalContribution = (contributionsMonth * paymentsYear * tenure);
        console.log(""Total Contribution: "" + totalContribution);
        var totalInvestment = parseFloat(investmentAmount) + parseFloat(totalContribution);
        console.log(""Total Investment : "" + totalInvestment);
        var multiplier = totalInvestment > 0 ? postTenureValue / totalInvestment : 0;
        console.log(""Total multiplier : "" + multiplier);
        multiplier = multiplier.toFixed(2);
        $('#Multiplier').val(multiplier);

    }
    function getValue(amount) {");
            WriteLiteral(@"

        var result = typeof amount === 'string' ?
            amount.replace(/[\$,]/g, '') * 1 :
            typeof i === 'number' ?
                amount : 0;
        return result
    }
    function validateDecimalInput(control) {

        let controlError = control.concat('Error');
        //console.log(controlError)
        $(control).blur(function () {
            var tempVal = $(control).val();
            if (tempVal != this.value.match(/^\d+\.?\d{0,2}/)) {
                $(controlError).text(""Only Decimal Numbers Separated by a Decimal Point Are Allowed in this field"")
                $("":submit"").attr(""disabled"", true);
            }
            else {
                $(controlError).text("""");
                $("":submit"").removeAttr(""disabled"");
            }
        })
    }
    function populatePercentages() {
        var total = 0.0;
        // calculate the percentage for each row:
        $('#calc').DataTable().rows().every(function (rowIdx, tableLoop, rowLoop) {
");
            WriteLiteral(@"            // first calcuate the total:
            $('#calc').DataTable().rows().every(function (rowIdx, tableLoop, rowLoop) {
                // assumes amounts are not null, all numeric, and are in column 2:
                total = total + getValue(this.data()[1]);
            });
            // Remove the formatting to get integer data for summation
            var amount = getValue(this.data()[1]);
            // calculate percent to 2 decimal places:
            var percentage = Math.round((amount / total) * 10000) / 100;
            var cells = $('#calc').DataTable().cells(rowIdx, 2);
            //console.log(""This value Percentage "");
            //console.log(percentage);
            cells.every(function () {
                this.data(percentage);
            });

        });
    }
    $('div#calc_filter.dataTables_filter > label > input').keyup(function (e) {
        populatePercentages();
    });

    function PrintForm() {

        //var monthlybreakdown = $('#calc').tabl");
            WriteLiteral(@"eToJSON();
        //console.log(monthlybreakdown);
        //console.log(JSON.stringify(monthlybreakdown));
        var fund = $('#Fund').val();
        fund = fund.replace("","", ""."")
        var KonapoFundID = $('#KonapoFundID').val();
        var ClientID = $('#ClientID').val();
        var FundReference = $('#FundReference').val();
        var FundName = $('#FundName').val();
        //Calculation Form
        var CFPeriod = $('#Period').val();
        var CFEmergencyfund = $('#EmergencyTotal').val();
        var CFAnnualFund = $('#AnnualTotal').val();
        var CFLifeTimeRetirement = $('#LifeTimeTotal').val();
        var CFRetirementPeriod = $('#Retirement').val();
        var CFFund = fund;
        var CFDisplayOnReport = $('#CFDisplayOnReport').is(':checked');
        //Compound Interest : OTI
        var OTIInvestmentAmount = $('#InvestmentAmountOT').val();
        var OTIInterestRate = $('#InterestRateOT').val();
        var OTITenure = $('#TenureOT').val();
        var OTITota");
            WriteLiteral(@"lValue = $('#ValueAfterTenureOT').val();
        var OTIMultiplier = $('#MultiplierOT').val();
        var OTIDisplayOnReport = $('#OTIDisplayOnReport').is(':checked');

        //Target : TimeRequired
        var TTRIncomeAverage = $('#IncomeAverage').val();
        var TTRCommittment = $('#Committment').val();
        var TTRFundTargetMonths = $('#FundTargetMonths').val();
        var TTRFundTargetYears = $('#FundTargetYears').val();
        var TTRDisplayOnReport = $('#TTRDisplayOnReport').is(':checked');
        //Target : AccountingForProgress
        var TAFPProgress = $('#Progress').val();
        var TAFPBalance = $('#Balance').val();
        var TAFPCommittment = $('#MCommitment').val();
        var TAFPTargetMonths = $('#TargetRMonths').val();
        var TAFPTargetYears = $('#TargetRYears').val();
        var TAFPDisplayOnReport = $('#TAFPDisplayOnReport').is(':checked');
        //Target : AnnualTarget
        var TATProgress = $('#AProgress').val();
        var TATBalance = $('");
            WriteLiteral(@"#ABalance').val();
        var TATCommittment = $('#AMCommitment').val();
        var TATTargetMonths = $('#ATargetRMonths').val();
        var TATTargetYears = $('#ATargetRYears').val();
        var TATDisplayOnReport = $('#TATDisplayOnReport').is(':checked');


        //Compound Interest Regular Deposits

        var RDInvestmentAmount = $('#InvestmentAmount').val();
        var RDInterestRate = $('#InterestRate').val();
        var RDTenure = $('#Tenure').val();
        var RDContributions = $('#ContributionsMonth').val();
        var RDPaymentsYear = $('#PaymentsYear').val();
        var RDTotalValue = $('#PostTenureValue').val();
        var RDMultiplier = $('#Multiplier').val();
        var RDDisplayOnReport = $('#RDDisplayOnReport').is(':checked');
        var MBDisplayOnReport = $('#MBDisplayOnReport').is(':checked');
        var CurrentURL = window.location.port ? $(location).attr('protocol') + $(location).attr('port') + '//' + $(location).attr('hostname') : $(location).attr('proto");
            WriteLiteral(@"col') + '//' + $(location).attr('hostname');
        var SavePrintedReport = $('#SavePrintedReport').is(':checked');

        var konapoCalculations = {
            ""KonapoFundID"": KonapoFundID,
            ""ClientID"": ClientID,
            ""FundName"": FundName,
            ""FundReference"": FundReference,
            //Calculation Form
            ""CFEmergencyfund"": CFEmergencyfund,
            ""CFPeriod"": CFPeriod,
            ""CFAnnualFund"": CFAnnualFund,
            ""CFLifeTimeRetirement"": CFLifeTimeRetirement,
            ""CFRetirementPeriod"": CFRetirementPeriod,
            ""CFFund"": CFFund,
            ""CFDisplayOnReport"": CFDisplayOnReport,

            //Compound Interest One Time Investment
            ""OTIInvestmentAmount"": OTIInvestmentAmount,
            ""OTIInterestRate"": OTIInterestRate,
            ""OTITenure"": OTITenure,
            ""OTITotalValue"": OTITotalValue,
            ""OTIMultiplier"": OTIMultiplier,
            ""OTIDisplayOnReport"": OTIDisplayOnReport,
         ");
            WriteLiteral(@"   //Target : TimeRequired
            ""TTRIncomeAverage"": TTRIncomeAverage,
            ""TTRCommittment"": TTRCommittment,
            ""TTRFundTargetMonths"": TTRFundTargetMonths,
            ""TTRFundTargetYears"": TTRFundTargetYears,
            ""TTRDisplayOnReport"": TTRDisplayOnReport,
            //Target : AccountForProgress
            ""TAFPProgress"": TAFPProgress,
            ""TAFPBalance"": TAFPBalance,
            ""TAFPCommittment"": TAFPCommittment,
            ""TAFPTargetMonths"": TAFPTargetMonths,
            ""TAFPTargetYears"": TAFPTargetYears,
            ""TAFPDisplayOnReport"": TAFPDisplayOnReport,

            //Target : AnnualTarget
            ""TATProgress"": TATProgress,
            ""TATBalance"": TATBalance,
            ""TATCommittment"": TATCommittment,
            ""TATTargetMonths"": TATTargetMonths,
            ""TATTargetYears"": TATTargetYears,
            ""TATDisplayOnReport"": TATDisplayOnReport,

            //Compound Interest Regular Deposits
            ""RDInvestmentAmou");
            WriteLiteral(@"nt"": RDInvestmentAmount,
            ""RDInterestRate"": RDInterestRate,
            ""RDTenure"": RDTenure,
            ""RDPaymentsYear"": RDPaymentsYear,
            ""RDContributions"": RDContributions,
            ""RDTotalValue"": RDTotalValue,
            ""RDMultiplier"": RDMultiplier,
            ""RDDisplayOnReport"": RDDisplayOnReport,

            ""MBDisplayOnReport"": MBDisplayOnReport,
            ""CurrentURL"": CurrentURL,
            ""SavePrintedReport"": SavePrintedReport
        };
        console.log(konapoCalculations);
        console.log(JSON.stringify(konapoCalculations));

        if (konapoCalculations != null) {
            $.ajax({
                type: ""POST"",
                url: ""/KonapoFund/GetKhonapoReport/"",
                data: JSON.stringify(konapoCalculations),
                contentType: ""application/json;"",
                dataType: ""json"",
                success: function (response) {
                    if (response != null) {
                        console.");
            WriteLiteral(@"log(""Response received "");
                        console.log(response);
                        console.log(response.filename);

                        var fileName = response.filename;
                        console.log('File Name ' + fileName);
                        if (fileName === undefined || fileName === null)
                            alert(response);
                        else {
                            var bytes = _base64ToArrayBuffer(response.fileContents);
                            saveByteArray(fileName, bytes);
                        }
                    }

                    else {
                        alert(""An error has occurred.This application may no longer proceed with downloading the report.Please contact your System Administrator for Assistance"");
                    }

                },
                failure: function (response) {
                    alert(""An error has occurred.This application may no longer proceed with downloading the report");
            WriteLiteral(@".Please contact your System Administrator for Assistance"");
                    console.log(response.responseText);
                },
                error: function (response) {
                    alert(""An error has occurred.This application may no longer proceed with downloading the report.Please contact your System Administrator for Assistance"");
                    console.log(response.responseText);
                }
            });
        }

    }

    function _base64ToArrayBuffer(base64) {
        var binary_string = window.atob(base64);
        var len = binary_string.length;
        var bytes = new Uint8Array(len);
        for (var i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes.buffer;
    }

    function saveByteArray(reportName, byte) {
        var blob = new Blob([byte], { type: ""application/octetstream"" });
        var isIE = false || !!document.documentMode;
        if (isIE) {
            window.navigator.");
            WriteLiteral(@"msSaveBlob(blob, reportName);
        } else {
            var url = window.URL || window.webkitURL;
            link = url.createObjectURL(blob);
            var a = $(""<a />"");
            a.attr(""download"", reportName);
            a.attr(""href"", link);
            $(""body"").append(a);
            a[0].click();
            $(""body"").remove(a);
        }
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SmartDomain.Loan> Html { get; private set; }
    }
}
#pragma warning restore 1591
