@model SmartDomain.Loan
@using SmartHelper;
<section class="content-header">
    <h1>
        @Model.LoanRef
    </h1>
</section>
<!-- Main content -->
<section class="content container-fluid">
    <!-- Horizontal Form -->
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">@Model.LoanRef</h3>
        </div>

        <!-- /.box-header -->
        <!-- form start -->
        <form class="form-horizontal" method="post" action="/LoanManager/ViewLoan">

            @if (TempData["Error"] != null)
            {<div class="container">
                    <div class="text-danger">@TempData["Error"].ToString()</div>
                </div>
                <br />
            }
            <div class="container">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>

            @if (TempData["Success"] != null)
            {<div class="container">
                    <div class="text-success">@TempData["Success"].ToString()</div>
                </div>
            }
            @if (TempData["Warning"] != null)
            {<div class="container">
                    <div class="text-warning">@TempData["Warning"].ToString()</div>
                </div>
            }
            <div class="box-body">
                <section>
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Loan Reference</label>
                        <div class="col-sm-10">
                            <label for="inputEmail3" class="form-control label-default">@Model.LoanRef</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Applicant</label>
                        <div class="col-sm-10">
                            @if (UserAppData.HasPermission(Permissions.View_Client))
                            {
                                <a asp-controller="Client" target="_blank" asp-action="ViewClient" asp-route-id="@Model.ClientID">@Model.Client.ClientRef</a>
                            }
                            else
                            {
                                @Model.Client.ClientRef
                            }

                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Date Registered</label>
                        <div class="col-sm-10">
                            <label for="inputEmail3" class="form-control label-default">@UtilityService.ShowDateTime(@Model.RegistrationDate)</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Is Active</label>
                        <div class="col-sm-2">
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(model => model.IsActive)
                            </label>

                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">LastChanged By</label>
                        <div class="col-sm-10">
                            <label for="inputEmail3" class="form-control label-default">@Model.LastChangedBy</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Last Updated</label>
                        <div class="col-sm-10">
                            <label for="inputEmail3" class="form-control label-default">@UtilityService.ShowDateTime(@Model.LastChangedDate)</label>

                        </div>
                    </div>
                    <input type="hidden" id="LoanID" name="KonapoFundID" value="@Model.LoanID" />
                    <input type="hidden" id="ClientID" name="ClientID" value="@Model.ClientID" />
                    <input type="hidden" id="LoanRef" name="LoanRef" value="@Model.LoanRef" />

                </section>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                @if (UserAppData.HasPermission(Permissions.Update_Loan))
                {
                    var name = @Model.IsActive ? "Deactivate" : "Activate";
                    <button type="submit" class="btn btn-info">@name</button>
                }
                @if (UserAppData.HasPermission(Permissions.Delete_Loan))
                {
                    <a class="btn btn-danger" asp-controller="Loan" asp-action="Delete" asp-route-id="@Model.LoanID">Delete</a>
                }
            </div>
            <!-- /.box-footer -->
        </form>

    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Financial Information
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <!-- Nav tabs -->

                    <ul class="nav nav-tabs">

                        <li class="active">
                            <a href="#Finance" data-toggle="tab">Information</a>
                        </li>

                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">

                        <div class="tab-pane fade in active " id="Finance">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Information
                                </div>
                            </div>
                            <!-- /.panel-heading -->
                            <div class="panel-body">
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Product</label>
                                    <div class="col-sm-10">
                                        <select asp-for="@Model.ProductID" class="form-control" asp-items="ViewBag.ProductList">
                                            <option value="">----</option>
                                        </select>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Effective Date</label>
                                    <div class="col-sm-10">
                                        <input type="date" class="form-control" id="StartDate" name="StartDate" onchange="CalculateMaturityDate()" required>
                                    </div>
                                </div>
                                <br />
                                <br />

                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Tenor (Months)</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Duration" name="Duration" onchange="CalculateMaturityDate()">
                                        <span id="DurationError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Maturity Date</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="MaturityDate" name="MaturityDate" onchange="CalculateTotal()" disabled>

                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Application Fee</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="ApplicationFee" name="ApplicationFee" value="0.00" onchange="CalculateTotal()">
                                        <span id="ApplicationFeeError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Principal</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Principal" name="Principal" value="0.00" onchange="CalculateTotal()">
                                        <span id="PrincipalError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Effective Deposit</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="EffectiveDeposit" name="EffectiveDeposit" onchange="CalculateTotal()" disabled>
                                        <span id="EffectiveDepositError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />

                                <div class="panel panel-success">
                                    <div class="panel-heading">
                                        Loan Calculations
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Application Fee</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="CalcAppFee" name="CalcAppFee" value="0.00" onchange="CalculateTotal()">
                                        <span id="CalcAppFeeError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />

                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Collection Fee</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="CollectionFee" name="CollectionFee" value="0.00" onchange="CalculateTotal()">
                                        <span id="CollectionFeeError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />

                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Upfront Fees</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Upfront" name="Upfront" value="0.00" onchange="CalculateTotal()">
                                        <span id="UpfrontError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">UpFront Deposit </label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="MinimumUpfront" name="MinimumUpfront" onchange="CalculateTotal()" disabled>
                                        <span id="MinimumUpfrontError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Fees Required</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="FeesReq" name="FeesReq" onchange="CalculateTotal()" disabled>
                                        <span id="FeesReqError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Interest</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Interest" name="Interest" onchange="CalculateTotal()" disabled>
                                        <span id="InterestError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Fx Fixing</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="FxFixing" name="FxFixing" onchange="CalculateTotal()" disabled>
                                        <span id="FxFixingError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Maturity Value</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="MaturityValue" name="MaturityValue" onchange="CalculateTotal()" disabled>
                                        <span id="MaturityValueError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Remittance</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Installment" name="Installment" onchange="CalculateTotal()" disabled>
                                        <span id="InstallmentError" class="text-danger text-bold"></span>
                                    </div>
                                </div>
                                <br />
                                <br />
                            </div>

                            <div class="box-footer">
                                <a class="btn  btn-small btn-success pull-right" data-toggle="modal" data-target="#AddSubCategory">Submit for Approval</a>
                            </div>
                        </div>

                        <!-- /.panel-body -->
                    </div>
                    <!-- /.panel -->
                </div>

            </div>
        </div>

</section>
<link href="~/dist/css/anchor.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/table-to-json@1.0.0/lib/jquery.tabletojson.min.js" integrity="sha256-H8xrCe0tZFi/C2CgxkmiGksqVaxhW0PFcUKZJZo1yNU=" crossorigin="anonymous"></script>

<script>
    // When the user clicks on <div>, open the popup
    function myPopUpFunction() {
        var popup = document.getElementById("myPopup");
        popup.classList.toggle("show");
    }
    $(document).ready(function () {
        var currentdate = new Date();
        var currentMonth = currentdate.getMonth();
        var currentYear = currentdate.getFullYear();
        var newDate = new Date(currentYear, currentMonth, 1);
        var nextMonth = new Date(newDate.setMonth(newDate.getMonth() + 1))
        $('#StartDate').val(nextMonth.toISOString().substring(0, 10));
        CalculateTableTotal();
        CalculateTotal();
        CalculateCI();

    });
    function CalculateMaturityDate() {

        var months = $('#Duration').val();
        var startdate = $('#StartDate').val();
        var _startdate = new Date(startdate);
        var currentMonth = _startdate.getMonth();
        var currentYear = _startdate.getFullYear();
        var newDate = new Date(currentYear, currentMonth, 1);
        var maturitydate = new Date(newDate.setMonth(newDate.getMonth() + parseInt(months)));

        alert(maturitydate);
        $('#MaturityDate').val(maturitydate.toISOString().substring(0, 10));


    }
    $(function () {
        $("#accordion").accordion({
            /*It will disable all the active(open) pane i.e .
            collapsible: true,
            active:false,*/
            heightStyle: "content",

        });
    });
    $(function () {
        $('#btnPrint').click(function () {
            PrintForm();
        });
    });

    $(function () {
        validateDecimalInput('#ApplicationFee');
        validateDecimalInput('#Principal');
        validateDecimalInput('#EffectiveDeposit');
        validateDecimalInput('#Duration');
        validateDecimalInput('#InterestRate');
        validateDecimalInput('#CollectionFee');
        validateDecimalInput('#Upfront');
        validateDecimalInput('#MinimumUpfront');
        validateDecimalInput('#FeesReq');
        validateDecimalInput('#Interest');
        validateDecimalInput('#FxFixing');
        validateDecimalInput('#MaturityValue');
        validateDecimalInput('#Installment');
        validateDecimalInput('#CalcAppFee');

    })



    function CalculateTotal() {

        var deposit = 0.00;// take from product
        var principal = $('#Principal').val();
        var applicationFee = $('#ApplicationFee').val();
        var calculatedapplicationFee = 0.00;
        var effectiveDeposit = $('#EffectiveDeposit').val();
        var interestRate = 0.00;
        var minCharge = 0.00;// take from product
        var collectionFee = 0.00;
        var upFront = 0.00;
        var minUpFront = 0.00;

        var duration = $('#Duration').val();
        var feesReq = 0.00;
        var interest = 0.00;
        var fxFixing = 0.00;;
        var maturityValue = 0.00 //$('#MaturityValue').val();
        var installment = 0.00;//$('#Installment').val();

        var actualCollect = (principal * (1 - deposit) * doc_fee).toFixed(2);
        if (minCharge != 0) {
            collectionFee = Math.Max(actualCollect, min_charge);
        }
        else {
            collectionFee = actualCollect;
        }

        var fees = (applicationFee + collectionFee).ToFixed(2);
        minUpFront = ((deposit * principal) + (fees)).ToFixed(2);
        var depositamount = (deposit * principal).toFixed(2);
        feesReq = (principal - (Math.Max(mindep, effective_dep)) + fees).toFixed(2);
        if (type == 2) {
            // type 2 = fees* (loanduration+1)* interestrate where original duration is the actual loan duration
            interest = (feereq * (duration + 1) * interestrate).toFixed(2);
        }
        else {
            //type 1 = fees*(loanduration )*interest rate where  original duration is the actual loan durationn
            interest = (feereq * duration * interestrate).toFixed(2);
        }
        finance = (feereq + interest).toFixed(2);
        fixedamount = (fixrate * principle).toFixed(2);
        maturityValue = (finance + fixedamount).toFixed(2);
        //  installment = Math.Round((amounttofinance) / (loanduration), 2); original formula
        installment = ((maturityValue) / (loanduration - 1)).toFixed(2);
        fxFixing = fixedamount.toFixed(2);

        $('#CalcAppFee').val(calculatedapplicationFee.toFixed(2));
        $('#MinimumUpfront').val(minUpFront.toFixed(2));
        $('#CollectionFee').val(collectionFee.toFixed(2));
        $('#Upfront').val(upFront.toFixed(2));
        $('#FeesReq').val(feesReq.toFixed(2));
        $('#Interest').val(interest.toFixed(2));
        $('#MaturityValue').val(maturityValue.toFixed(2));
        $('#Installment').val(installment.toFixed(2));
        $('#FxFixing').val(fxFixing);

    }

    function getValue(amount) {

        var result = typeof amount === 'string' ?
            amount.replace(/[\$,]/g, '') * 1 :
            typeof i === 'number' ?
                amount : 0;
        return result
    }
    function validateDecimalInput(control) {

        let controlError = control.concat('Error');
        //console.log(controlError)
        $(control).blur(function () {
            var tempVal = $(control).val();
            if (tempVal != this.value.match(/^\d+\.?\d{0,2}/)) {
                $(controlError).text("Only Decimal Numbers Separated by a Decimal Point Are Allowed in this field")
                $(":submit").attr("disabled", true);
            }
            else {
                $(controlError).text("");
                $(":submit").removeAttr("disabled");
            }
        })
    }

    function PrintForm() {

        //var monthlybreakdown = $('#calc').tableToJSON();
        //console.log(monthlybreakdown);
        //console.log(JSON.stringify(monthlybreakdown));
        var fund = $('#Fund').val();
        fund = fund.replace(",", ".")
        var KonapoFundID = $('#KonapoFundID').val();
        var ClientID = $('#ClientID').val();
        var FundReference = $('#FundReference').val();
        var FundName = $('#FundName').val();
        //Calculation Form
        var CFPeriod = $('#Period').val();
        var CFEmergencyfund = $('#EmergencyTotal').val();
        var CFAnnualFund = $('#AnnualTotal').val();
        var CFLifeTimeRetirement = $('#LifeTimeTotal').val();
        var CFRetirementPeriod = $('#Retirement').val();
        var CFFund = fund;
        var CFDisplayOnReport = $('#CFDisplayOnReport').is(':checked');
        //Compound Interest : OTI
        var OTIInvestmentAmount = $('#InvestmentAmountOT').val();
        var OTIInterestRate = $('#InterestRateOT').val();
        var OTITenure = $('#TenureOT').val();
        var OTITotalValue = $('#ValueAfterTenureOT').val();
        var OTIMultiplier = $('#MultiplierOT').val();
        var OTIDisplayOnReport = $('#OTIDisplayOnReport').is(':checked');

        //Target : TimeRequired
        var TTRIncomeAverage = $('#IncomeAverage').val();
        var TTRCommittment = $('#Committment').val();
        var TTRFundTargetMonths = $('#FundTargetMonths').val();
        var TTRFundTargetYears = $('#FundTargetYears').val();
        var TTRDisplayOnReport = $('#TTRDisplayOnReport').is(':checked');
        //Target : AccountingForProgress
        var TAFPProgress = $('#Progress').val();
        var TAFPBalance = $('#Balance').val();
        var TAFPCommittment = $('#MCommitment').val();
        var TAFPTargetMonths = $('#TargetRMonths').val();
        var TAFPTargetYears = $('#TargetRYears').val();
        var TAFPDisplayOnReport = $('#TAFPDisplayOnReport').is(':checked');
        //Target : AnnualTarget
        var TATProgress = $('#AProgress').val();
        var TATBalance = $('#ABalance').val();
        var TATCommittment = $('#AMCommitment').val();
        var TATTargetMonths = $('#ATargetRMonths').val();
        var TATTargetYears = $('#ATargetRYears').val();
        var TATDisplayOnReport = $('#TATDisplayOnReport').is(':checked');


        //Compound Interest Regular Deposits

        var RDInvestmentAmount = $('#InvestmentAmount').val();
        var RDInterestRate = $('#InterestRate').val();
        var RDTenure = $('#Tenure').val();
        var RDContributions = $('#ContributionsMonth').val();
        var RDPaymentsYear = $('#PaymentsYear').val();
        var RDTotalValue = $('#PostTenureValue').val();
        var RDMultiplier = $('#Multiplier').val();
        var RDDisplayOnReport = $('#RDDisplayOnReport').is(':checked');
        var MBDisplayOnReport = $('#MBDisplayOnReport').is(':checked');
        var CurrentURL = window.location.port ? $(location).attr('protocol') + $(location).attr('port') + '//' + $(location).attr('hostname') : $(location).attr('protocol') + '//' + $(location).attr('hostname');
        var SavePrintedReport = $('#SavePrintedReport').is(':checked');

        var konapoCalculations = {
            "KonapoFundID": KonapoFundID,
            "ClientID": ClientID,
            "FundName": FundName,
            "FundReference": FundReference,
            //Calculation Form
            "CFEmergencyfund": CFEmergencyfund,
            "CFPeriod": CFPeriod,
            "CFAnnualFund": CFAnnualFund,
            "CFLifeTimeRetirement": CFLifeTimeRetirement,
            "CFRetirementPeriod": CFRetirementPeriod,
            "CFFund": CFFund,
            "CFDisplayOnReport": CFDisplayOnReport,

            //Compound Interest One Time Investment
            "OTIInvestmentAmount": OTIInvestmentAmount,
            "OTIInterestRate": OTIInterestRate,
            "OTITenure": OTITenure,
            "OTITotalValue": OTITotalValue,
            "OTIMultiplier": OTIMultiplier,
            "OTIDisplayOnReport": OTIDisplayOnReport,
            //Target : TimeRequired
            "TTRIncomeAverage": TTRIncomeAverage,
            "TTRCommittment": TTRCommittment,
            "TTRFundTargetMonths": TTRFundTargetMonths,
            "TTRFundTargetYears": TTRFundTargetYears,
            "TTRDisplayOnReport": TTRDisplayOnReport,
            //Target : AccountForProgress
            "TAFPProgress": TAFPProgress,
            "TAFPBalance": TAFPBalance,
            "TAFPCommittment": TAFPCommittment,
            "TAFPTargetMonths": TAFPTargetMonths,
            "TAFPTargetYears": TAFPTargetYears,
            "TAFPDisplayOnReport": TAFPDisplayOnReport,

            //Target : AnnualTarget
            "TATProgress": TATProgress,
            "TATBalance": TATBalance,
            "TATCommittment": TATCommittment,
            "TATTargetMonths": TATTargetMonths,
            "TATTargetYears": TATTargetYears,
            "TATDisplayOnReport": TATDisplayOnReport,

            //Compound Interest Regular Deposits
            "RDInvestmentAmount": RDInvestmentAmount,
            "RDInterestRate": RDInterestRate,
            "RDTenure": RDTenure,
            "RDPaymentsYear": RDPaymentsYear,
            "RDContributions": RDContributions,
            "RDTotalValue": RDTotalValue,
            "RDMultiplier": RDMultiplier,
            "RDDisplayOnReport": RDDisplayOnReport,

            "MBDisplayOnReport": MBDisplayOnReport,
            "CurrentURL": CurrentURL,
            "SavePrintedReport": SavePrintedReport
        };
        console.log(konapoCalculations);
        console.log(JSON.stringify(konapoCalculations));

        if (konapoCalculations != null) {
            $.ajax({
                type: "POST",
                url: "/KonapoFund/GetKhonapoReport/",
                data: JSON.stringify(konapoCalculations),
                contentType: "application/json;",
                dataType: "json",
                success: function (response) {
                    if (response != null) {
                        console.log("Response received ");
                        console.log(response);
                        console.log(response.filename);

                        var fileName = response.filename;
                        console.log('File Name ' + fileName);
                        if (fileName === undefined || fileName === null)
                            alert(response);
                        else {
                            var bytes = _base64ToArrayBuffer(response.fileContents);
                            saveByteArray(fileName, bytes);
                        }
                    }

                    else {
                        alert("An error has occurred.This application may no longer proceed with downloading the report.Please contact your System Administrator for Assistance");
                    }

                },
                failure: function (response) {
                    alert("An error has occurred.This application may no longer proceed with downloading the report.Please contact your System Administrator for Assistance");
                    console.log(response.responseText);
                },
                error: function (response) {
                    alert("An error has occurred.This application may no longer proceed with downloading the report.Please contact your System Administrator for Assistance");
                    console.log(response.responseText);
                }
            });
        }

    }

    function _base64ToArrayBuffer(base64) {
        var binary_string = window.atob(base64);
        var len = binary_string.length;
        var bytes = new Uint8Array(len);
        for (var i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes.buffer;
    }

    function saveByteArray(reportName, byte) {
        var blob = new Blob([byte], { type: "application/octetstream" });
        var isIE = false || !!document.documentMode;
        if (isIE) {
            window.navigator.msSaveBlob(blob, reportName);
        } else {
            var url = window.URL || window.webkitURL;
            link = url.createObjectURL(blob);
            var a = $("<a />");
            a.attr("download", reportName);
            a.attr("href", link);
            $("body").append(a);
            a[0].click();
            $("body").remove(a);
        }
    }
</script>