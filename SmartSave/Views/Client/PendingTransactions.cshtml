@model SmartInterfaces.PendingTransactions;
@using SmartHelper;
@using System.Collections.Generic;
@{
    TempData["Title"] = "Client Details";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @Model.ClientForm.ClientRef
    </h1>
</section>
<!-- Main content -->
<section class="content container-fluid">
    <!-- Horizontal Form -->
    <partial name="_ClientView" model="@Model.ClientForm" />
    <div class="row">
        <div class="col-lg-12">
            <div class="tab-pane fade in" id="Contacts">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Outstanding Payments  Cut Off Date @Model.CutOffDate
                    </div>
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <form method="get" asp-controller="Client" asp-action="GenerateOutStandingStatement">
                        <div class="dataTable_wrapper">
                            <table class="table table-striped table-bordered table-hover" id="dataTables-example">
                                <thead>
                                    <tr>
                                        <th>Entity</th>
                                        <th>Fee Name</th>
                                        <th>Amount</th>
                                        <th>Payment Terms</th>
                                        <th>Due Date</th>
                                        <th>Action</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ProductPayments != null)
                                    {
                                        var clientFees = Model.ProductPayments.OrderByDescending(x => x.DueDate);

                                        foreach (var item in clientFees)
                                        {
                                            <tr>
                                                @if (UtilityService.HasPermission(Permissions.View_Product))
                                                {
                                                    <td><a target="_blank" asp-controller="Product" asp-action="ViewProduct" asp-route-id="@item.ProductID">@item.Entity</a></td>

                                                }
                                                else
                                                {
                                                    <td>@Html.DisplayFor(modelItem => item.Entity)</td>
                                                }
                                                @if (UtilityService.HasPermission(Permissions.View_Product_Fee))
                                                {
                                                    <td><a target="_blank" asp-controller="Product" asp-action="ViewProductFee" asp-route-id="@item.ProductFeeID">@item.FeeName</a></td>

                                                }
                                                else
                                                {
                                                    <td>@Html.DisplayFor(modelItem => item.FeeName)</td>
                                                }
                                                <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                                                <td>@Html.DisplayFor(modelItem => item.PaymentTerms)</td>
                                                <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                                                @if (UtilityService.HasPermission(Permissions.View_Client_Payments))
                                                {

                                                    <td><a asp-controller="Client" asp-action="ClientFeePayment" asp-route-id="@item.ClientFeeID">View</a></td>
                                                }
                                            </tr>
                                        }
                                    }

                                    @if (Model.CoursePayments != null)
                                    {
                                        var clientFees = Model.CoursePayments.OrderByDescending(x => x.DueDate);

                                        foreach (var item in clientFees)
                                        {
                                            <tr>
                                                @if (UtilityService.HasPermission(Permissions.View_Course))
                                                {
                                                    <td><a target="_blank" asp-controller="Courses" asp-action="ViewCourse" asp-route-id="@item.CourseID">@item.Entity</a></td>

                                                }
                                                else
                                                {
                                                    <td>@Html.DisplayFor(modelItem => item.Entity)</td>

                                                }
                                                @if (UtilityService.HasPermission(Permissions.View_Course_Fee))
                                                {
                                                    <td><a target="_blank" asp-controller="Courses" asp-action="ViewCourseFee" asp-route-id="@item.CourseFeeID">@item.FeeName</a></td>

                                                }
                                                else
                                                {
                                                    <td>@Html.DisplayFor(modelItem => item.FeeName)</td>
                                                }
                                                <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                                                <td>@Html.DisplayFor(modelItem => item.PaymentTerms)</td>
                                                <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                                                @if (UtilityService.HasPermission(Permissions.View_Client_Payments))
                                                {

                                                    <td><a asp-controller="Client" asp-action="ClientCourseFeePayment" asp-route-id="@item.ClientFeeID">View</a></td>
                                                }
                                            </tr>
                                        }
                                    }
                            </table>
                        </div>
                    </form>
                </div>
                <input type="hidden" name="ClientID" value="@Model.ClientID" />
                <div class="box-footer">
                    @if (UtilityService.HasPermission(Permissions.Generate_Client_Statement))
                    {
                        <button type="submit" class="btn  btn-small btn-success" name="GenerateOutStandingStatement" value="GenerateOutStandingStatement">Generate Statement</button>
                        <button type="submit" class="btn  btn-small btn-info" name="EmailOutStandingStatement" value="EmailOutStandingStatement" disabled="@UtilityService.FeatureFlagOn((int)FeatureFlagList.Enable_Document_Emailing_Functionality)">Email Statement</button>
                    }
                    <a class="btn btn-default pull-right" asp-controller="Client" asp-action="ViewClient" asp-route-id="@Model.ClientForm.ClientID">Cancel</a>

                </div>
            </div>
        </div>
    </div>

    <!-- /.box -->
</section>

