@model SmartDomain.ClientProduct

@using SmartHelper;
@using System.Collections.Generic;
@{
    TempData["Title"] = "Client Details";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @Model.Client.ClientRef
    </h1>
</section>
<!-- Main content -->
<section class="content container-fluid">
    <!-- Horizontal Form -->
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">@Model.Client.ClientFullName</h3>
        </div>
        <!-- /.box-header -->
        <form method="post" asp-controller="Client" asp-action="ViewClientProduct">

            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Information
                        </div>
                        <!-- /.panel-heading -->

                        <div class="modal-body">
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-2 control-label">Product</label>
                                <select asp-for="ProductID" class="form-control" asp-items="ViewBag.AllProductList">
                                    <option value="">----</option>
                                </select>

                            </div>
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-2 control-label">Is Active</label>
                                <div>
                                    <div class="checkbox">
                                        <label>
                                            <input asp-for="@Model.IsActive" />
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-2 control-label">Do Not Deduct</label>
                                <div class="checkbox">
                                    <label>
                                        <input asp-for="@Model.DoNotDeduct" />
                                    </label>
                                    <span class="text-danger text-normal"><i>Will override all deductions set at individual or Product Level if selected </i></span>
                                </div>
                            </div>
                            <section>
                                <h5 class="box-title text-danger text-normal"><i>Specific Individual Deductions (if any)</i></h5>
                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Percentage Deduction</label>
                                    <input type="text" class="form-control" asp-for="DeductionAmount" id="DeductionPercentage" value="@Model.DeductionPercentage">
                                    <span id="DeductionPercentageError" class="text-danger text-bold"></span>
                                </div>

                                <div class="form-group">
                                    <label for="inputEmail3" class="col-sm-2 control-label">Percentage Deduction After Salary Increment</label>
                                    <input type="text" class="form-control" asp-for="IncreamentAmount" id="IncreamentPercentage" value="@Model.IncreamentPercentage">
                                    <span id="IncreamentPercentageError" class="text-danger text-bold"></span>

                                </div>
                                <span class="text-danger text-normal"><i>Deductions defined at Product level will apply if do not deduct is not selected and individual deductions not specified not specified</i></span>
                            </section>


                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-2 control-label">Last Changed By</label>

                                <label for="inputEmail3" class="form-control label-default">@Model.LastChangedBy</label>

                            </div>

                            <div class="form-group">
                                <label for="inputEmail3" class="col-sm-2 control-label">Last Updated</label>

                                <label for="inputEmail3" class="form-control label-default">@UtilityService.ShowDateTime(@Model.LastChangedDate)</label>

                            </div>
                            <input type="hidden" name="ClientProductID" value="@Model.ClientProductID" />

                        </div>
                        <div class="modal-footer">
                            @if (UtilityService.HasPermission(Permissions.Update_Client_Product))
                            {
                                <button type="submit" class="btn btn-primary">Update</button>}
                            @if (UtilityService.HasPermission(Permissions.Delete_Client_Product))
                            {<a class="btn btn-danger" asp-controller="Client" asp-action="ActionClientProduct" asp-route-productid="@Model.ClientProductID" asp-route-Clientid="@Model.ClientID">Delete</a>
                            }  @if (UtilityService.HasPermission(Permissions.View_Client))
                            {<a class="btn btn-info" asp-controller="Client" asp-action="Products" asp-route-id="@Model.ClientID">View More Products</a>
                            } <a class="btn btn-default" asp-controller="Client" asp-action="ViewClient" asp-route-id="@Model.ClientID">Cancel</a>
                        </div>


                    </div>
                </div>
            </div>
        </form>
    </div>
   
    <!-- /.box -->
</section>
<script>
    $(document).ready(function () {
      
    });
   
    $(function () {
        $('#Salary').blur(function () {
            var tempVal = $('#Salary').val();
            console.debug(tempVal);
            if (tempVal != this.value.match(/^\d+\.?\d{0,2}/)) {
                $("#SalaryError").text("Only Decimal Numbers Separated by a Decimal Point Are Allowed in this field")
                $(":submit").attr("disabled", true);
            }
            else {
                $("#SalaryError").text("");
                $(":submit").removeAttr("disabled");
            }
        })

        $('#DeductionPercentage').blur(function () {
            var tempVal = $('#DeductionPercentage').val();
            if (tempVal != this.value.match(/^\d+\.?\d{0,2}/)) {
                $("#DeductionPercentageError").text("Only Decimal Numbers Separated by a Decimal Point Are Allowed in this field")
                $(":submit").attr("disabled", true);
            }
            else {
                $("#DeductionPercentageError").text("");
                $(":submit").removeAttr("disabled");
            }
        })

        $('#IncreamentPercentage').blur(function () {
            var tempVal = $('#IncreamentPercentage').val();
            if (tempVal != this.value.match(/^\d+\.?\d{0,2}/)) {
                $("#IncreamentPercentageError").text("Only Decimal Numbers Separated by a Decimal Point Are Allowed in this field")
                $(":submit").attr("disabled", true);
            }
            else {
                $("#IncreamentPercentageError").text("");
                $(":submit").removeAttr("disabled");
            }
        })
    })
 
</script>

