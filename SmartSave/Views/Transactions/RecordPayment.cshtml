@model SmartDomain.Transaction
@using SmartHelper;
@{
    TempData["Title"] = "Add New Transaction";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Transaction Details
    </h1>
</section>
<!-- Main content -->
<section class="content container-fluid">
    <!-- Horizontal Form -->
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Add New Transaction</h3>
        </div>
        <!-- /.box-header -->
        <!-- form start -->
        <form class="form-horizontal" method="post" action="RecordPayment">
            <div class="box-body">

                @if (TempData["Error"] != null)
                {<div class="container">
                        <div class="text-danger">@TempData["Error"].ToString()</div>
                    </div>
                    <br />
                }
                <div class="container">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                </div>

                @if (TempData["Success"] != null)
                {<div class="container">
                        <div class="text-success">@TempData["Success"].ToString()</div>
                    </div>
                }
                @if (TempData["Warning"] != null)
                {<div class="container">
                        <div class="text-warning">@TempData["Warning"].ToString()</div>
                    </div>
                }
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Employee Details</label>
                    <div class="col-sm-10">
                        <select asp-for="ClientID" id="ClientID" class="form-control" asp-items="ViewBag.ClientList" onchange="GetProduct(this.value)">
                            <option value="">--- Select Employee ---</option>
                        </select>

                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Product</label>
                    <div class="col-sm-10">

                        <select id="ProductList" name="ProductID" class="form-control" onchange="GetAssertList(this.value)">
                        </select>
                        <span id="ProductListNotFound" class="text-danger text-bold"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Assert Class</label>
                    <div class="col-sm-10">

                        <select id="AssertList" name="AssertID" class="form-control" onchange="GetCategoryList(this.value)">
                        </select>
                        <span id="AssertListNotFound" class="text-danger text-bold"></span>
                    </div>
                </div>


                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Assert Category</label>
                    <div class="col-sm-10">
                        <select id="CategoryList" name="AssertCategoryID" class="form-control">
                        </select>
                        <span id="CategoryListNotFound" class="text-danger text-bold"></span>
                    </div>
                </div>


                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Bank Account</label>
                    <div class="col-sm-10">
                        <select asp-for="BankAccountID" class="form-control" asp-items="ViewBag.BankAccountList" required>
                            <option value="">----</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Transaction Type</label>
                    <div class="col-sm-10">
                        <select asp-for="TransactionTypeID" class="form-control" asp-items="ViewBag.TransactionTypeList">
                            <option value="">----</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Payment Date:</label>
                    <div class="col-sm-10">
                        <input type="date" class="form-control" name="PaymentDate" ID="PaymentDate">
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Narration:</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="Narration" ID="Narration">
                    </div>
                </div>

                <div class="form-group">
                    @{

                        if (SmartHelper.UtilityService.ApplicationIsVATCompliant)
                        {
                            if (SmartHelper.UtilityService.PaymentsMustBeVatInclusive)
                            {
                                <div class="col-sm-10">
                                    <label class="text-danger">Payment Amount Should be VAT Inclusive Actual Breakdown will be Automatically Calculated By The System using a VAT Percentage of @SmartHelper.UtilityService.VATPercentage .</label>
                                </div>
                            }

                            else
                            {
                                <div class="col-sm-10">
                                    <label class="text-danger">Payment Amount Should be VAT Exclusive Actual Breakdown will be Automatically Calculated By The System using a VAT Percentage of @SmartHelper.UtilityService.VATPercentage .</label>
                                </div>
                            }
                        }
                    }
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-2 control-label">Pay Amount</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="Amount" name="Amount">
                        <span id="AmountError" class="text-danger text-bold"></span>
                    </div>
                </div>
                @if (SmartHelper.UtilityService.ApplicationIsVATCompliant)
                {
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">VAT</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" name="VAT" disabled="disabled" value="0.00">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Amount Excl VAT</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" name="AmountExclVAT" disabled="disabled" value="0.00">
                        </div>
                    </div>
                }
                @if (UtilityService.HasPermission(Permissions.Auto_Generate_Receipt))
                {
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Generate Receipt</label>
                        <div class="checkbox">
                            <label class="checkbox-inline">
                                <input type="checkbox" data-val="true" id="AutoGenerateReceipt"
                                       name="AutoGenerateReceipt" value="true">
                            </label>
                        </div>
                    </div>

                }

                @if (UtilityService.HasPermission(Permissions.Email_Receipt_To_Client))
                {
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">Email Receipt to Client</label>
                        <div class="checkbox">
                            <label class="checkbox-inline">
                                <input type="checkbox" data-val="true" id="AutoEmailReceipt"
                                       name="AutoEmailReceipt" value="true">
                            </label>
                        </div>
                    </div>

                }
            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                @if (UtilityService.HasPermission(Permissions.Capture_Payment))
                {
                    <button type="submit" class="btn btn-success pull-right">Submit</button>

                }
                <a class="btn btn-default" asp-controller="Transactions" asp-action="Transactions">Cancel</a>

            </div>
            <!-- /.box-footer -->
        </form>
    </div>
    <!-- /.box -->
</section>
<script>

    $(document).ready(function () {
        document.getElementById('PaymentDate').value = new Date().toISOString().substring(0, 10);
        $('#ClientID').change(function (e) {
            // Your event handler
        });

        // And now fire change event when the DOM is ready
        $('#ClientID').trigger('change');

    });


    $(function () {
        $('#Amount').blur(function () {
            var tempVal = $('#Amount').val();
            if (tempVal != this.value.match(/^\d+\.?\d{0,2}/)) {
                $("#AmountError").text("Only Decimal Numbers Separated by a Decimal Point Are Allowed in this field")
                $(":submit").attr("disabled", true);
            }
            else {
                $("#AmountError").text("");
                $(":submit").removeAttr("disabled");
            }
        })
    })


   
    function GetProduct(_clientID) {
        var processmessage = "<option value='0'> Please wait whilst we retrieve Products registered to Individual...</option>";
        $("#ProductList").html(processmessage).show();
        var url = "/Transactions/GetProductByClientID/";
       // alert(_clientID);
        $.ajax({
            url: url,
            data: { clientID: _clientID },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>----</option>";
                if (data == null || data.length == 0) {
                    $("#ProductListNotFound").text("Individual is not registered to any Products")
                    $(":submit").attr("disabled", true);
                }
                else {
                    $("#ProductListNotFound").text("");
                    $(":submit").removeAttr("disabled");
                 
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                    }
                }
                $("#ProductList").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }

    function GetAssertList(_productID) {
        var procemessage = "<option value='0'> Please wait whilst we retrieve Asserts registered to Product...</option>";
        $("#AssertList").html(procemessage).show();
        var url = "/Transactions/GetAssertByProductID/";
      
        $.ajax({
            url: url,
            data: { productID: _productID },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>----</option>";
                if (data == null || data.length == 0) {
                    $("#AssertListNotFound").text("No Asserts Linked To Product")
                   // $(":submit").attr("disabled", true);
                }
                else {
                    $("#AssertListNotFound").text("");
                   // $(":submit").removeAttr("disabled");

                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                    }
                }
                $("#AssertList").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
    function GetCategoryList(_assertID) {
        var procemessage = "<option value='0'> Please wait whilst we retrieve Categories registered to Assert...</option>";
        $("#CategoryList").html(procemessage).show();
        var url = "/Transactions/GetCategoryByAssertID/";

        $.ajax({
            url: url,
            data: { assertID: _assertID },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>----</option>";
                if (data == null || data.length == 0) {
                    $("#CategoryListNotFound").text("No Categories Linked To Assert")
                    // $(":submit").attr("disabled", true);
                }
                else {
                    $("#CategoryListNotFound").text("");
                    // $(":submit").removeAttr("disabled");

                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                    }
                }
                $("#CategoryList").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
</script>