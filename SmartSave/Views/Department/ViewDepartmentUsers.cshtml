@model IEnumerable<SmartDomain.User>
@using SmartHelper;

<section class="content-header">
    <h1>
        @ViewData["Title"]
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Dashboard"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">@ViewData["Title"]</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Department Users</h3>
                    @*<a href="AddUser" class="btn btn-success pull-right">New User</a><br />*@
                </div>
                <!-- /.box-header -->
                 <div class="box-body">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Full Name</th>
                                <th>User Name</th>
                                <th>Email</th>
                                <th>Active Status</th>
                                <th>Roles</th>
                                <th>Last Changed Date</th>
                                <th>Changed By</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    @{ string fullName = String.Concat(item.LastName, " ", item.FirstName);
                                        string activeStatus = UtilityService.ShowYesOrNo(item.IsActive);
                                        string dateCreated = UtilityService.ShowDateTime(item.LastChangedDate);
                                        int rolesCount = item.UserRoles.Count();
                                    }
                                    <td>@fullName</td>
                                    <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.EmailAddress)</td>
                                    <td>@activeStatus</td>
                                    <td><a asp-controller="User" asp-action="UserRoles" asp-route-id="@item.UserID">@rolesCount</a></td>
                                    <td>@dateCreated</td>
                                    <td>@Html.DisplayFor(modelItem => item.LastChangedBy)</td>
                                    <td><a asp-controller="User" asp-action="ViewUser" asp-route-id="@item.UserID">View</a> | <a href="" onclick="Delete('@ViewBag.DepartmentID,@item.UserID')">Delete</a></td>
                                </tr>
                            }
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>

<!-- DataTables -->
<script src="~/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="~/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<!-- page script -->
<script>
    $(function () {
        $('#example1').DataTable();
    });
    function Delete(id,userid){
       // alert(id)
        var txt;
        var r = confirm("Are you sure you want to Delete?");
        if (r == true) {

            $.ajax(
            {
                type: "POST",
                url: '@Url.Action("RemoveUser", "Department")',
                data: {
                    id: id,
                    userid: userid
                },
                error: function (result) {
                    alert("error");
                },
                success: function (result) {
                    if (result == true) {
                        var baseUrl ="/ViewDepartmentUsers/" +id;
                        window.location.reload();
                    }
                    else {
                        alert("There is a problem, Try Later!");
                    }
                }
            });
        }
    }
</script>